{"version":3,"file":"Shifts-CTSTyOnz.js","sources":["../../src/app/main/pages/shifts/constants/shiftsTabItems.ts","../../src/app/main/pages/shifts/tabs/shifts/constants/shiftsHeadings.ts","../../src/app/main/pages/shifts/tabs/shifts/shifts-dialog-form/ShiftsDialogForm.tsx","../../src/app/main/pages/shifts/tabs/shifts/shifts-filter-form/ShiftsFilterForm.tsx","../../src/app/main/pages/shifts/tabs/shifts/shifts-delete-dialog-box/ShiftsDeleteDialogBox.tsx","../../src/app/main/pages/shifts/tabs/shifts/shifts-table-actions/ShiftsTableActions.tsx","../../src/app/main/pages/shifts/tabs/shifts/Shifts.tsx","../../src/app/main/pages/shifts/tabs/shift-pattern/ShiftPatternApi.ts","../../src/app/main/pages/shifts/tabs/shift-pattern/constants/shiftPatternColors.ts","../../src/app/main/pages/shifts/tabs/shift-pattern/shift-pattern-delete-dialog-box/ShiftPatternDeleteDialogBox.tsx","../../src/app/main/pages/shifts/tabs/shift-pattern/ShiftPattern.tsx","../../src/app/main/pages/shifts/ShiftsContent.tsx","../../src/app/main/pages/shifts/Shifts.tsx"],"sourcesContent":["import { TabItemType } from \"app/shared-components/custom-tabs/CustomTabs\";\n\nconst shiftsTabItems: () => Array<TabItemType> = () => [\n\t{ key: \"\", label: \"SHIFTS\" },\n\t{ key: \"shift-pattern\", label: \"SHIFT_PATTERN\" }\n];\n\nexport default shiftsTabItems;\n","import { TableHeading } from \"app/shared-components/custom-table/CustomTable\";\n\nconst shiftsHeadings: () => Array<TableHeading> = () => [\n\t{\n\t\tkey: \"businessPhaseName\",\n\t\ttitle: \"PHASE\",\n\t\tisConstantTranslation: true,\n\t\tcanBeSorted: true,\n\t\tcustomSortVar: \"phase\"\n\t},\n\t{\n\t\tkey: \"metl\",\n\t\ttitle: \"METL\",\n\t\tisConstantTranslation: true\n\t},\n\t{\n\t\tkey: \"name\",\n\t\ttitle: \"NAME\",\n\t\tisConstantTranslation: true,\n\t\tcanBeSorted: true\n\t},\n\t{\n\t\tkey: \"day\",\n\t\ttitle: \"DAY\",\n\t\tisConstantTranslation: true\n\t},\n\t{\n\t\tkey: \"night\",\n\t\ttitle: \"NIGHT\",\n\t\tisConstantTranslation: true\n\t},\n\t{\n\t\tkey: \"slots\",\n\t\ttitle: \"SLOTS\",\n\t\tcanBeSorted: true\n\t},\n\t{\n\t\tkey: \"minHeadCountDay\",\n\t\ttitle: \"MIN_CD\",\n\t\ttooltipMessage: \"MIN_DAY_HEAD_COUNT\",\n\t\tcanBeSorted: true\n\t},\n\t{\n\t\tkey: \"minHeadCountNight\",\n\t\ttitle: \"MIN_CN\",\n\t\ttooltipMessage: \"MIN_NIGHT_HEAD_COUNT\",\n\t\tcanBeSorted: true\n\t},\n\t{\n\t\tkey: \"usersCount\",\n\t\ttitle: \"USERS\",\n\t\tisConstantTranslation: true\n\t},\n\t{\n\t\tkey: \"ptl\",\n\t\ttitle: \"PTL\",\n\t\tisConstantTranslation: true\n\t},\n\t{\n\t\tkey: \"shiftPatternType\",\n\t\ttitle: \"SHIFT_PT\",\n\t\ttooltipMessage: \"SHIFT_PATTERN\",\n\t\tcanBeSorted: true,\n\t\tcustomSortVar: \"shiftPattern\"\n\t}\n];\n\nexport default shiftsHeadings;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { CONSTANTS, SETTINGS_PAGE, SHIFTS_PAGE } from \"app/constants/TranslationNamespaces\";\nimport CustomSelectField, { SelectList } from \"app/shared-components/custom-select-field/CustomSelectField\";\nimport { useGetOneShiftQuery, usePostShiftMutation, usePutShiftMutation } from \"../ShiftsApi\";\nimport { IShift } from \"../ShiftsModel\";\nimport { z } from \"zod\";\nimport { EMPTY_ERROR_MESSAGE } from \"app/constants/FormErrors\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { showLoading } from \"app/shared-components/custom-loading/CustomLoadingSlice\";\nimport { showMessage } from \"@fuse/core/FuseMessage/fuseMessageSlice\";\nimport { snackbarDefaults } from \"app/constants/SnackbarDefaults\";\nimport { closeDialog } from \"@fuse/core/FuseDialog/fuseDialogSlice\";\nimport CustomFormDialog from \"app/shared-components/custom-form-dialog/CustomFormDialog\";\nimport CustomAutoComplete from \"app/shared-components/custom-auto-complete/CustomAutoComplete\";\nimport CustomTextField from \"app/shared-components/custom-text-field/CustomTextField\";\nimport { SelectListShifts } from \"app/constants/SelectListShifts\";\nimport { FormHelperText } from \"@mui/material\";\nimport { ITableBusinessPhaseArg } from \"src/app/main/pages/settings/tabs/business-phases/BusinessPhasesModel\";\nimport { DEFAULT_PAGE_SIZE } from \"app/constants/DefaultConfig\";\nimport { SortOrder } from \"app/constants/DefaultInterfaces\";\nimport { useGetBusinessInfoQuery } from \"src/app/main/pages/settings/tabs/business-info/BusinessInfoApi\";\nimport { useGetAllBusinessPhasesQuery } from \"src/app/main/pages/settings/tabs/business-phases/BusinessPhasesApi\";\n\ntype ShiftsDialogFormProps = {\n\tadd?: boolean;\n\tshiftsId?: string;\n};\n\nconst ShiftsDialogForm = (props: ShiftsDialogFormProps) => {\n\tconst { add, shiftsId } = props;\n\tconst shiftsTranslation = useTranslation(SHIFTS_PAGE);\n\tconst constantTranslation = useTranslation(CONSTANTS);\n\tconst settingsTranslation = useTranslation(SETTINGS_PAGE);\n\tconst dispatch = useDispatch();\n\tconst [phaseFetchArg, setPhaseFetchArg] = useState<ITableBusinessPhaseArg>({ businessId: 1, pageSize: DEFAULT_PAGE_SIZE, sortBy: \"name\", sortOrder: SortOrder.ASCENDING, page: 1 });\n\tconst [skip, setSkip] = useState(true);\n\tconst [phases, setPhases] = useState<Array<SelectList>>([]);\n\tconst [totalPhases, setTotalPhases] = useState(0);\n\tconst getBusinessInfo = useGetBusinessInfoQuery(\"1\", { refetchOnMountOrArgChange: true });\n\tconst getBusinessPhases = useGetAllBusinessPhasesQuery(phaseFetchArg);\n\tconst getShiftById = useGetOneShiftQuery(shiftsId, { refetchOnMountOrArgChange: true, skip: skip });\n\tconst [selectedPhase, setSelectedPhase] = useState<SelectList>();\n\tconst [postShift, postShiftResult] = usePostShiftMutation();\n\tconst [putShift, putShiftResult] = usePutShiftMutation();\n\n\tuseEffect(() => {\n\t\tif (shiftsId) {\n\t\t\tsetSkip(false);\n\t\t}\n\n\t\treturn () => setSkip(true);\n\t}, [shiftsId]);\n\n\tconst defaultValues = {\n\t\tid: undefined,\n\t\tbusinessId: 1,\n\t\tbusinessPhaseId: add ? undefined : null,\n\t\tname: \"\",\n\t\tdayShiftStartHour: 7,\n\t\tdayShiftEndHour: 19,\n\t\tnightShiftStartHour: 19,\n\t\tnightShiftEndHour: 7,\n\t\tslots: 0,\n\t\tminHeadCountDay: 0,\n\t\tminHeadCountNight: 0,\n\t\tshiftPatternType: 0\n\t};\n\n\tconst schema = z.object({\n\t\tid: z.number().optional(),\n\t\tbusinessId: z.number().optional(),\n\t\tbusinessPhaseId: z.any(),\n\t\tname: z.string().min(1, `${shiftsTranslation.t(\"SHIFT\")} ${constantTranslation.t(EMPTY_ERROR_MESSAGE)}`),\n\t\tdayShiftStartHour: z.number(),\n\t\tdayShiftEndHour: z.number(),\n\t\tnightShiftStartHour: z.number(),\n\t\tnightShiftEndHour: z.number(),\n\t\tslots: z.number().min(1),\n\t\tminHeadCountDay: z.number().min(1),\n\t\tminHeadCountNight: z.number().min(1),\n\t\tshiftPatternType: z.number().min(1)\n\t});\n\n\tconst methods = useForm({\n\t\tmode: \"onChange\",\n\t\tdefaultValues: defaultValues,\n\t\tresolver: zodResolver(schema)\n\t});\n\n\tconst { handleSubmit, control, formState, setValue, reset, setError, clearErrors, watch } = methods;\n\tconst { isValid, errors, isDirty } = formState;\n\n\tuseEffect(() => {\n\t\tconst { isSuccess, data: rawData, isLoading, isFetching, isError, error } = getBusinessPhases;\n\n\t\tdispatch(showLoading(isLoading));\n\t\tdispatch(showLoading(isFetching));\n\n\t\tif (isSuccess && rawData) {\n\t\t\tconst { data, totalCount } = rawData;\n\n\t\t\tdata.map((item) => {\n\t\t\t\tif (phases.filter((phase) => phase.value == item.id).length === 0) {\n\t\t\t\t\tsetPhases((state) => [...state, { label: item.name, value: item.id, totalHeadCount: item.minHeadCount }]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsetTotalPhases((state) => {\n\t\t\t\tif (phaseFetchArg.filter) {\n\t\t\t\t\treturn state;\n\t\t\t\t} else {\n\t\t\t\t\treturn totalCount;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (isError && error) {\n\t\t\tdispatch(showMessage(snackbarDefaults(`${constantTranslation.t(\"ERROR_LOADING_DATA\")} ${settingsTranslation.t(\"BUSINESS_PHASES\")}`, \"error\")));\n\t\t}\n\t}, [getBusinessPhases]);\n\n\tuseEffect(() => {\n\t\tconst { isSuccess, data: rawData, isLoading, isFetching, isError, error } = getBusinessInfo;\n\n\t\tdispatch(showLoading(isLoading));\n\t\tdispatch(showLoading(isFetching));\n\n\t\tif (isSuccess && rawData) {\n\t\t\tif (rawData.slotsShift) {\n\t\t\t\tsetValue(\"slots\", rawData.slotsShift);\n\t\t\t}\n\n\t\t\tif (rawData.dayShiftStartHour) {\n\t\t\t\tsetValue(\"dayShiftStartHour\", rawData.dayShiftStartHour);\n\t\t\t}\n\n\t\t\tif (rawData.dayShiftEndHour) {\n\t\t\t\tsetValue(\"dayShiftEndHour\", rawData.dayShiftEndHour);\n\t\t\t}\n\n\t\t\tif (rawData.nightShiftStartHour) {\n\t\t\t\tsetValue(\"nightShiftStartHour\", rawData.nightShiftStartHour);\n\t\t\t}\n\n\t\t\tif (rawData.nightShiftEndHour) {\n\t\t\t\tsetValue(\"nightShiftEndHour\", rawData.nightShiftEndHour);\n\t\t\t}\n\t\t}\n\n\t\tif (isError && error) {\n\t\t\tdispatch(showMessage(snackbarDefaults(`${constantTranslation.t(\"ERROR_LOADING_DATA\")} ${settingsTranslation.t(\"BUSINESS_INFO\")}`, \"error\")));\n\t\t}\n\t}, [getBusinessInfo]);\n\n\tuseEffect(() => {\n\t\tconst { data, isSuccess, isLoading, isError, error } = getShiftById;\n\n\t\tdispatch(showLoading(isLoading));\n\n\t\tif (isSuccess && data) {\n\t\t\tObject.keys(data).forEach((key: any) => setValue(key, data[key]));\n\t\t\tsetValue(\"businessPhaseId\", phases.filter((phase) => phase.value === data.businessPhaseId)[0]);\n\t\t}\n\n\t\tif (isError && error) {\n\t\t\tdispatch(showMessage(snackbarDefaults(`${constantTranslation.t(\"ERROR_LOADING_DATA\")} ${settingsTranslation.t(\"USER_CATEGORY\")}`, \"error\")));\n\t\t}\n\n\t\treturn () => Object.keys(defaultValues).forEach((key: any) => setValue(key, defaultValues[key]));\n\t}, [getShiftById]);\n\n\tuseEffect(() => {\n\t\tif (add) {\n\t\t\tsetSelectedPhase(phases.filter((phase) => phase.value === 1)[0]);\n\t\t}\n\t}, [phases]);\n\n\tconst submitForm = (data: IShift) => {\n\t\tif (add) {\n\t\t\tpostShift(data);\n\t\t} else {\n\t\t\tputShift(data);\n\t\t}\n\t\treset(data);\n\t};\n\n\tuseEffect(() => {\n\t\tconst { isError, isLoading, isSuccess, data, error } = postShiftResult;\n\n\t\tdispatch(showLoading(isLoading));\n\n\t\tif (isSuccess && data) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tdispatch(showMessage(snackbarDefaults(`${shiftsTranslation.t(\"SHIFT\")} ${constantTranslation.t(\"ADD_SUCCESSFUL\")}`, \"success\")));\n\t\t\t}, 250);\n\t\t\tdispatch(closeDialog());\n\t\t}\n\n\t\tif (isError && error) {\n\t\t\tdispatch(showMessage(snackbarDefaults(`${constantTranslation.t(\"ADD_ERROR\")} ${shiftsTranslation.t(\"SHIFT\")}`, \"error\")));\n\t\t}\n\t}, [postShiftResult]);\n\n\tuseEffect(() => {\n\t\tconst { isError, isLoading, isSuccess, data, error } = putShiftResult;\n\n\t\tdispatch(showLoading(isLoading));\n\n\t\tif (isSuccess && data) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tdispatch(showMessage(snackbarDefaults(`${shiftsTranslation.t(\"SHIFT\")} ${constantTranslation.t(\"SAVE_SUCCESSFUL\")}`, \"success\")));\n\t\t\t}, 250);\n\t\t\tdispatch(closeDialog());\n\t\t}\n\n\t\tif (isError && error) {\n\t\t\tdispatch(showMessage(snackbarDefaults(`${constantTranslation.t(\"SAVE_ERROR\")} ${shiftsTranslation.t(\"SHIFT\")}`, \"error\")));\n\t\t}\n\t}, [putShiftResult]);\n\n\tconst infinitePhaseScroll = () => {\n\t\tif (phases.length < totalPhases) {\n\t\t\tsetPhaseFetchArg((state) => {\n\t\t\t\treturn { ...state, page: state.page + 1, filter: undefined };\n\t\t\t});\n\t\t}\n\t};\n\n\tconst phaseInputChange = (value) => {\n\t\tif (value) {\n\t\t\tsetTimeout(() => setPhaseFetchArg((state) => ({ ...state, filter: value })), 500);\n\t\t}\n\t};\n\n\treturn (\n\t\t<CustomFormDialog\n\t\t\tisGrid={true}\n\t\t\tisDirty={isDirty}\n\t\t\tisValid={isValid}\n\t\t\tactions={[{ title: add ? constantTranslation.t(\"ADD\") : constantTranslation.t(\"SAVE\"), onClick: handleSubmit((data) => submitForm({ ...data, businessPhaseId: data.businessPhaseId.value })) }]}\n\t\t\thandleSubmit={handleSubmit((data) => submitForm({ ...data, businessPhaseId: data.businessPhaseId.value }))}\n\t\t\ttitle={add ? `${constantTranslation.t(\"ADD\")} ${shiftsTranslation.t(\"SHIFT\")}` : `${constantTranslation.t(\"EDIT\")} ${shiftsTranslation.t(\"SHIFT\")}`}\n\t\t>\n\t\t\t<CustomAutoComplete\n\t\t\t\tcontrol={control}\n\t\t\t\tname=\"businessPhaseId\"\n\t\t\t\tlabel={constantTranslation.t(\"PHASE\")}\n\t\t\t\terrors={errors}\n\t\t\t\trequired\n\t\t\t\tInputLabelProps={{\n\t\t\t\t\tshrink: true\n\t\t\t\t}}\n\t\t\t\tdialog=\"true\"\n\t\t\t\tcol2=\"true\"\n\t\t\t\tselectList={phases}\n\t\t\t\tonScrollFunc={infinitePhaseScroll}\n\t\t\t\tonInputChange={phaseInputChange}\n\t\t\t\tonSelectState={setSelectedPhase}\n\t\t\t/>\n\t\t\t<CustomTextField\n\t\t\t\tcontrol={control}\n\t\t\t\tname=\"name\"\n\t\t\t\tlabel={constantTranslation.t(\"NAME\")}\n\t\t\t\terrors={errors}\n\t\t\t\trequired\n\t\t\t\tInputLabelProps={{\n\t\t\t\t\tshrink: true\n\t\t\t\t}}\n\t\t\t\tcol2=\"true\"\n\t\t\t\tdialog=\"true\"\n\t\t\t\tplaceholder={constantTranslation.t(\"NAME\")}\n\t\t\t/>\n\t\t\t<CustomTextField\n\t\t\t\tcontrol={control}\n\t\t\t\tname=\"slots\"\n\t\t\t\tlabel={settingsTranslation.t(\"SLOTS\")}\n\t\t\t\terrors={errors}\n\t\t\t\trequired\n\t\t\t\tInputLabelProps={{\n\t\t\t\t\tshrink: true\n\t\t\t\t}}\n\t\t\t\tcol1=\"true\"\n\t\t\t\tdialog=\"true\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tplaceholder={settingsTranslation.t(\"SLOTS\")}\n\t\t\t/>\n\t\t\t<CustomTextField\n\t\t\t\tcontrol={control}\n\t\t\t\tname=\"minHeadCountDay\"\n\t\t\t\tlabel={shiftsTranslation.t(\"DAY_HEAD_COUNT\")}\n\t\t\t\terrors={errors}\n\t\t\t\trequired\n\t\t\t\tInputLabelProps={{\n\t\t\t\t\tshrink: true\n\t\t\t\t}}\n\t\t\t\tcol1=\"true\"\n\t\t\t\tdialog=\"true\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tplaceholder={shiftsTranslation.t(\"DAY_HEAD_COUNT\")}\n\t\t\t/>\n\t\t\t<CustomTextField\n\t\t\t\tcontrol={control}\n\t\t\t\tname=\"minHeadCountNight\"\n\t\t\t\tlabel={shiftsTranslation.t(\"NIGHT_HEAD_COUNT\")}\n\t\t\t\terrors={errors}\n\t\t\t\trequired\n\t\t\t\tInputLabelProps={{\n\t\t\t\t\tshrink: true\n\t\t\t\t}}\n\t\t\t\tcol1=\"true\"\n\t\t\t\tdialog=\"true\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tplaceholder={shiftsTranslation.t(\"NIGHT_HEAD_COUNT\")}\n\t\t\t/>\n\t\t\t<CustomTextField\n\t\t\t\tcontrol={control}\n\t\t\t\tname=\"shiftPatternType\"\n\t\t\t\tlabel={shiftsTranslation.t(\"SHIFT_PATTERN\")}\n\t\t\t\terrors={errors}\n\t\t\t\trequired\n\t\t\t\tInputLabelProps={{\n\t\t\t\t\tshrink: true\n\t\t\t\t}}\n\t\t\t\tcol1=\"true\"\n\t\t\t\tdialog=\"true\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tplaceholder={shiftsTranslation.t(\"SHIFT_PATTERN\")}\n\t\t\t/>\n\t\t\t<div className=\"flex flex-col mr-32 col-span-4 md:col-span-2\">\n\t\t\t\t<div className=\"flex flex-row items-center\">\n\t\t\t\t\t<CustomSelectField\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tname=\"dayShiftStartHour\"\n\t\t\t\t\t\tlabel={settingsTranslation.t(\"DAY_SHIFT_START_HOUR\")}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\tselectList={SelectListShifts}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tdouble=\"true\"\n\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tplaceholder={settingsTranslation.t(\"DAY_SHIFT_START_HOUR\")}\n\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t<span className=\"mx-12 mt-4\">-</span>\n\t\t\t\t\t<CustomSelectField\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tname=\"dayShiftEndHour\"\n\t\t\t\t\t\tlabel={settingsTranslation.t(\"DAY_SHIFT_END_HOUR\")}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\tselectList={SelectListShifts}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tdouble=\"true\"\n\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tplaceholder={settingsTranslation.t(\"DAY_SHIFT_END_HOUR\")}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<FormHelperText> </FormHelperText>\n\t\t\t</div>\n\t\t\t<div className=\"flex flex-col mr-32 col-span-4 md:col-span-2\">\n\t\t\t\t<div className=\"flex flex-row items-center\">\n\t\t\t\t\t<CustomSelectField\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tname=\"nightShiftStartHour\"\n\t\t\t\t\t\tlabel={settingsTranslation.t(\"NIGHT_SHIFT_START_HOUR\")}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\tselectList={SelectListShifts}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tdouble=\"true\"\n\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tplaceholder={settingsTranslation.t(\"NIGHT_SHIFT_START_HOUR\")}\n\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t<span className=\"mx-12 mt-4\">-</span>\n\t\t\t\t\t<CustomSelectField\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tname=\"nightShiftEndHour\"\n\t\t\t\t\t\tlabel={settingsTranslation.t(\"NIGHT_SHIFT_END_HOUR\")}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\tselectList={SelectListShifts}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tdouble=\"true\"\n\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tplaceholder={settingsTranslation.t(\"NIGHT_SHIFT_END_HOUR\")}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<FormHelperText> </FormHelperText>\n\t\t\t</div>\n\t\t</CustomFormDialog>\n\t);\n};\n\nexport default ShiftsDialogForm;\n","import CustomAutoComplete from \"app/shared-components/custom-auto-complete/CustomAutoComplete\";\nimport CustomSelectField, { SelectList } from \"app/shared-components/custom-select-field/CustomSelectField\";\nimport CustomTextField from \"app/shared-components/custom-text-field/CustomTextField\";\nimport { FormHelperText } from \"@mui/material\";\nimport { SelectListShifts } from \"app/constants/SelectListShifts\";\nimport { CONSTANTS, SETTINGS_PAGE, SHIFTS_PAGE } from \"app/constants/TranslationNamespaces\";\nimport { useTranslation } from \"react-i18next\";\nimport { useGetBusinessInfoQuery } from \"src/app/main/pages/settings/tabs/business-info/BusinessInfoApi\";\nimport { useGetAllBusinessPhasesQuery } from \"src/app/main/pages/settings/tabs/business-phases/BusinessPhasesApi\";\nimport { BaseSyntheticEvent, Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport { ITableBusinessPhaseArg } from \"src/app/main/pages/settings/tabs/business-phases/BusinessPhasesModel\";\nimport { DEFAULT_PAGE_SIZE } from \"app/constants/DefaultConfig\";\nimport { SortOrder } from \"app/constants/DefaultInterfaces\";\nimport { z } from \"zod\";\nimport { useDispatch } from \"react-redux\";\nimport { showLoading } from \"app/shared-components/custom-loading/CustomLoadingSlice\";\nimport { showMessage } from \"@fuse/core/FuseMessage/fuseMessageSlice\";\nimport { snackbarDefaults } from \"app/constants/SnackbarDefaults\";\nimport { Control, FieldErrors, UseFormHandleSubmit, UseFormSetValue, useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport CustomFilterContainer from \"app/shared-components/custom-filter-container/CustomFilterContainer\";\nimport { closeDialog, openDialog } from \"@fuse/core/FuseDialog/fuseDialogSlice\";\nimport ShiftsDialogForm from \"../shifts-dialog-form/ShiftsDialogForm\";\nimport CustomDialog from \"app/shared-components/custom-dialog/CustomDialog\";\nimport { ITableShiftsArg } from \"../ShiftsModel\";\n\ntype ShiftsFilterFormProps = {\n\tisDialog?: boolean;\n\thandleSubmit?: (e?: BaseSyntheticEvent<object, any, any>) => void | {} | Promise<any>;\n\tcontrol?: Control<any, any>;\n\terrors?: FieldErrors<any>;\n\tsetValue?: UseFormSetValue<any>;\n};\n\nconst ShiftsFilterForm = (props: ShiftsFilterFormProps) => {\n\tconst { isDialog, handleSubmit, control, errors, setValue } = props;\n\tconst constantTranslation = useTranslation(CONSTANTS);\n\tconst shiftsTranslation = useTranslation(SHIFTS_PAGE);\n\tconst settingsTranslation = useTranslation(SETTINGS_PAGE);\n\tconst dispatch = useDispatch();\n\tconst [phaseFetchArg, setPhaseFetchArg] = useState<ITableBusinessPhaseArg>({ businessId: 1, pageSize: DEFAULT_PAGE_SIZE, sortBy: \"name\", sortOrder: SortOrder.ASCENDING, page: 1 });\n\tconst [phases, setPhases] = useState<Array<SelectList>>([]);\n\tconst [totalPhases, setTotalPhases] = useState(0);\n\tconst [selectedPhase, setSelectedPhase] = useState<SelectList>();\n\tconst getBusinessInfo = useGetBusinessInfoQuery(\"1\", { refetchOnMountOrArgChange: true });\n\tconst getBusinessPhases = useGetAllBusinessPhasesQuery(phaseFetchArg);\n\n\tuseEffect(() => {\n\t\tconst { isSuccess, data: rawData, isLoading, isFetching, isError, error } = getBusinessPhases;\n\n\t\tdispatch(showLoading(isLoading));\n\t\tdispatch(showLoading(isFetching));\n\n\t\tif (isSuccess && rawData) {\n\t\t\tconst { data, totalCount } = rawData;\n\n\t\t\tdata.map((item) => {\n\t\t\t\tif (phases.filter((phase) => phase.value == item.id).length === 0) {\n\t\t\t\t\tsetPhases((state) => [...state, { label: item.name, value: item.id, totalHeadCount: item.minHeadCount }]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsetTotalPhases((state) => {\n\t\t\t\tif (phaseFetchArg.filter) {\n\t\t\t\t\treturn state;\n\t\t\t\t} else {\n\t\t\t\t\treturn totalCount;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (isError && error) {\n\t\t\tdispatch(showMessage(snackbarDefaults(`${constantTranslation.t(\"ERROR_LOADING_DATA\")} ${settingsTranslation.t(\"BUSINESS_PHASES\")}`, \"error\")));\n\t\t}\n\t}, [getBusinessPhases]);\n\n\tuseEffect(() => {\n\t\tconst { isSuccess, data: rawData, isLoading, isFetching, isError, error } = getBusinessInfo;\n\n\t\tdispatch(showLoading(isLoading));\n\t\tdispatch(showLoading(isFetching));\n\n\t\tif (isSuccess && rawData) {\n\t\t\tif (rawData.slotsShift) {\n\t\t\t\tsetValue(\"slots\", rawData.slotsShift);\n\t\t\t}\n\n\t\t\tif (rawData.dayShiftStartHour) {\n\t\t\t\tsetValue(\"dayShiftStartHour\", rawData.dayShiftStartHour);\n\t\t\t}\n\n\t\t\tif (rawData.dayShiftEndHour) {\n\t\t\t\tsetValue(\"dayShiftEndHour\", rawData.dayShiftEndHour);\n\t\t\t}\n\n\t\t\tif (rawData.nightShiftStartHour) {\n\t\t\t\tsetValue(\"nightShiftStartHour\", rawData.nightShiftStartHour);\n\t\t\t}\n\n\t\t\tif (rawData.nightShiftEndHour) {\n\t\t\t\tsetValue(\"nightShiftEndHour\", rawData.nightShiftEndHour);\n\t\t\t}\n\t\t}\n\n\t\tif (isError && error) {\n\t\t\tdispatch(showMessage(snackbarDefaults(`${constantTranslation.t(\"ERROR_LOADING_DATA\")} ${settingsTranslation.t(\"BUSINESS_INFO\")}`, \"error\")));\n\t\t}\n\t}, [getBusinessInfo]);\n\n\tconst infinitePhaseScroll = () => {\n\t\tif (phases.length < totalPhases) {\n\t\t\tsetPhaseFetchArg((state) => {\n\t\t\t\treturn { ...state, page: state.page + 1, filter: undefined };\n\t\t\t});\n\t\t}\n\t};\n\n\tconst phaseInputChange = (value) => {\n\t\tif (value) {\n\t\t\tsetTimeout(() => setPhaseFetchArg((state) => ({ ...state, filter: value })), 500);\n\t\t}\n\t};\n\n\tconst formFields = (flags) => (\n\t\t<>\n\t\t\t<CustomAutoComplete\n\t\t\t\tcontrol={control}\n\t\t\t\tname=\"businessPhaseId\"\n\t\t\t\tlabel={constantTranslation.t(\"PHASE\")}\n\t\t\t\terrors={errors}\n\t\t\t\tfilter={flags.filter}\n\t\t\t\tdialog={flags.dialog}\n\t\t\t\tcol2={flags.isGrid}\n\t\t\t\tInputLabelProps={{\n\t\t\t\t\tshrink: true\n\t\t\t\t}}\n\t\t\t\tselectList={phases}\n\t\t\t\tonScrollFunc={infinitePhaseScroll}\n\t\t\t\tonInputChange={phaseInputChange}\n\t\t\t\tonSelectState={setSelectedPhase}\n\t\t\t/>\n\t\t\t<CustomTextField\n\t\t\t\tcontrol={control}\n\t\t\t\tname=\"name\"\n\t\t\t\tlabel={constantTranslation.t(\"NAME\")}\n\t\t\t\terrors={errors}\n\t\t\t\tInputLabelProps={{\n\t\t\t\t\tshrink: true\n\t\t\t\t}}\n\t\t\t\tfilter={flags.filter}\n\t\t\t\tdialog={flags.dialog}\n\t\t\t\tcol2={flags.isGrid}\n\t\t\t\tplaceholder={constantTranslation.t(\"NAME\")}\n\t\t\t/>\n\t\t\t<CustomTextField\n\t\t\t\tcontrol={control}\n\t\t\t\tname=\"slots\"\n\t\t\t\tlabel={settingsTranslation.t(\"SLOTS\")}\n\t\t\t\terrors={errors}\n\t\t\t\tInputLabelProps={{\n\t\t\t\t\tshrink: true\n\t\t\t\t}}\n\t\t\t\ttype=\"number\"\n\t\t\t\tcol1={flags.isGrid}\n\t\t\t\tfilter={flags.filter}\n\t\t\t\tdialog={flags.dialog}\n\t\t\t\tplaceholder={settingsTranslation.t(\"SLOTS\")}\n\t\t\t/>\n\t\t\t<CustomTextField\n\t\t\t\tcontrol={control}\n\t\t\t\tname=\"minHeadCountDay\"\n\t\t\t\tlabel={shiftsTranslation.t(\"HEAD_COUNT\")}\n\t\t\t\terrors={errors}\n\t\t\t\tInputLabelProps={{\n\t\t\t\t\tshrink: true\n\t\t\t\t}}\n\t\t\t\ttype=\"number\"\n\t\t\t\tcol1={flags.isGrid}\n\t\t\t\tfilter={flags.filter}\n\t\t\t\tdialog={flags.dialog}\n\t\t\t\tplaceholder={shiftsTranslation.t(\"HEAD_COUNT\")}\n\t\t\t/>\n\t\t\t<CustomTextField\n\t\t\t\tcontrol={control}\n\t\t\t\tname=\"shiftPatternType\"\n\t\t\t\tlabel={shiftsTranslation.t(\"SHIFT_PATTERN\")}\n\t\t\t\terrors={errors}\n\t\t\t\tInputLabelProps={{\n\t\t\t\t\tshrink: true\n\t\t\t\t}}\n\t\t\t\ttype=\"number\"\n\t\t\t\tcol1={flags.isGrid}\n\t\t\t\tfilter={flags.filter}\n\t\t\t\tdialog={flags.dialog}\n\t\t\t\tplaceholder={shiftsTranslation.t(\"SHIFT_PATTERN\")}\n\t\t\t/>\n\t\t\t<div className=\"flex flex-col mr-32 col-span-4 md:col-span-2\">\n\t\t\t\t<div className=\"flex flex-row items-center\">\n\t\t\t\t\t<CustomSelectField\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tname=\"dayShiftStartHour\"\n\t\t\t\t\t\tlabel={settingsTranslation.t(\"DAY_SHIFT_START_HOUR\")}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\tselectList={SelectListShifts}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tdouble=\"true\"\n\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tplaceholder={settingsTranslation.t(\"DAY_SHIFT_START_HOUR\")}\n\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t<span className=\"mx-12 mt-4\">-</span>\n\t\t\t\t\t<CustomSelectField\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tname=\"dayShiftEndHour\"\n\t\t\t\t\t\tlabel={settingsTranslation.t(\"DAY_SHIFT_END_HOUR\")}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\tselectList={SelectListShifts}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tdouble=\"true\"\n\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tplaceholder={settingsTranslation.t(\"DAY_SHIFT_END_HOUR\")}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<FormHelperText> </FormHelperText>\n\t\t\t</div>\n\t\t\t<div className=\"flex flex-col mr-32 col-span-4 md:col-span-2\">\n\t\t\t\t<div className=\"flex flex-row items-center\">\n\t\t\t\t\t<CustomSelectField\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tname=\"nightShiftStartHour\"\n\t\t\t\t\t\tlabel={settingsTranslation.t(\"NIGHT_SHIFT_START_HOUR\")}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\tselectList={SelectListShifts}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tdouble=\"true\"\n\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tplaceholder={settingsTranslation.t(\"NIGHT_SHIFT_START_HOUR\")}\n\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t<span className=\"mx-12 mt-4\">-</span>\n\t\t\t\t\t<CustomSelectField\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tname=\"nightShiftEndHour\"\n\t\t\t\t\t\tlabel={settingsTranslation.t(\"NIGHT_SHIFT_END_HOUR\")}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\tselectList={SelectListShifts}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tdouble=\"true\"\n\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tplaceholder={settingsTranslation.t(\"NIGHT_SHIFT_END_HOUR\")}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<FormHelperText> </FormHelperText>\n\t\t\t</div>\n\t\t</>\n\t);\n\n\tif (isDialog) {\n\t\treturn (\n\t\t\t<CustomDialog\n\t\t\t\ttitle={constantTranslation.t(\"FILTER\") + \" \" + shiftsTranslation.t(\"SHIFTS\")}\n\t\t\t\tactions={[\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: constantTranslation.t(\"FILTER\"),\n\t\t\t\t\t\tonClick: handleSubmit\n\t\t\t\t\t}\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<div className=\"grid md:grid-cols-4 gap-12 \">{formFields({ filter: false, dialog: true, isGrid: true })}</div>\n\t\t\t</CustomDialog>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<CustomFilterContainer\n\t\t\t\thasAddButton={true}\n\t\t\t\thandleFilterClick={handleSubmit}\n\t\t\t\thandleAddClick={() =>\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\topenDialog({\n\t\t\t\t\t\t\tchildren: <ShiftsDialogForm add={true} />\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{formFields({ filter: true, dialog: false })}\n\t\t\t</CustomFilterContainer>\n\t\t);\n\t}\n};\n\nexport default ShiftsFilterForm;\n","import { useTranslation } from \"react-i18next\";\nimport { CONSTANTS, SHIFTS_PAGE } from \"app/constants/TranslationNamespaces\";\nimport { useDispatch } from \"react-redux\";\nimport { useDeleteShiftMutation } from \"../ShiftsApi\";\nimport { useEffect } from \"react\";\nimport { showLoading } from \"app/shared-components/custom-loading/CustomLoadingSlice\";\nimport { showMessage } from \"@fuse/core/FuseMessage/fuseMessageSlice\";\nimport { closeDialog } from \"@fuse/core/FuseDialog/fuseDialogSlice\";\nimport { snackbarDefaults } from \"app/constants/SnackbarDefaults\";\nimport CustomDialog from \"app/shared-components/custom-dialog/CustomDialog\";\n\ntype ShiftsDeleteDialogBoxProps = {\n\tshiftsId?: string;\n};\n\nconst ShiftsDeleteDialogBox = (props: ShiftsDeleteDialogBoxProps) => {\n\tconst constantTranslation = useTranslation(CONSTANTS);\n\tconst shiftsTranslation = useTranslation(SHIFTS_PAGE);\n\tconst { shiftsId } = props;\n\tconst dispatch = useDispatch();\n\tconst [deleteShift, deleteShiftResult] = useDeleteShiftMutation();\n\n\tuseEffect(() => {\n\t\tconst { isSuccess, isError, error, isLoading } = deleteShiftResult;\n\n\t\tdispatch(showLoading(isLoading));\n\n\t\tif (isSuccess) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tdispatch(showMessage(snackbarDefaults(`${shiftsTranslation.t(\"SHIFT\")} ${constantTranslation.t(\"DELETE_SUCCESSFUL\")}`, \"success\")));\n\t\t\t}, 250);\n\t\t\tdispatch(closeDialog());\n\t\t}\n\n\t\tif (error && isError) {\n\t\t\tdispatch(showMessage(snackbarDefaults(`${constantTranslation.t(\"DELETE_ERROR\")} ${shiftsTranslation.t(\"SHIFT\")}`, \"error\")));\n\t\t}\n\t}, [deleteShiftResult]);\n\n\treturn (\n\t\t<CustomDialog\n\t\t\ttitle={`${constantTranslation.t(\"DELETE\")} ${shiftsTranslation.t(\"SHIFT\")}`}\n\t\t\tactions={[\n\t\t\t\t{\n\t\t\t\t\ttitle: constantTranslation.t(\"DELETE\"),\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tdeleteShift(shiftsId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]}\n\t\t>\n\t\t\t<div className=\"flex flex-col px-12\">\n\t\t\t\t<p className=\"mb-10\">\n\t\t\t\t\t{constantTranslation.t(\"DELETE_MSG_1\")} {shiftsTranslation.t(\"SHIFT\")}?\n\t\t\t\t</p>\n\t\t\t\t<p className=\"mb-32\">\n\t\t\t\t\t{constantTranslation.t(\"DELETE_PREFIX\")} {shiftsTranslation.t(\"SHIFT\")} {constantTranslation.t(\"DELETE_MSG_2\")}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</CustomDialog>\n\t);\n};\n\nexport default ShiftsDeleteDialogBox;\n","import FuseSvgIcon from \"@fuse/core/FuseSvgIcon\";\nimport { TableAction } from \"app/shared-components/custom-table/CustomTable\";\nimport { BaseSyntheticEvent } from \"react\";\n\ntype HandleEdit = (event: BaseSyntheticEvent) => void;\ntype HandleDelete = (event: BaseSyntheticEvent) => void;\n\nconst ShiftsTableActions = (handleEdit: HandleEdit, handleDelete: HandleDelete): Array<TableAction> => [\n\t{\n\t\tlabel: \"EDIT\",\n\t\ticon: (\n\t\t\t<FuseSvgIcon\n\t\t\t\tclassName=\"pointer-events-none\"\n\t\t\t\tsize={24}\n\t\t\t>\n\t\t\t\tmaterial-outline:edit\n\t\t\t</FuseSvgIcon>\n\t\t),\n\t\ticonColor: \"success\",\n\t\tonClick: handleEdit\n\t},\n\t{\n\t\tlabel: \"DELETE\",\n\t\ticon: (\n\t\t\t<FuseSvgIcon\n\t\t\t\tclassName=\"pointer-events-none\"\n\t\t\t\tsize={24}\n\t\t\t>\n\t\t\t\tmaterial-outline:delete\n\t\t\t</FuseSvgIcon>\n\t\t),\n\t\ticonColor: \"error\",\n\t\tonClick: handleDelete\n\t}\n];\n\nexport default ShiftsTableActions;\n","import CustomTableContainer from \"app/shared-components/custom-table-container/CustomTableContainer\";\nimport CustomTable from \"app/shared-components/custom-table/CustomTable\";\nimport shiftsHeadings from \"./constants/shiftsHeadings\";\nimport ShiftsFilterForm from \"./shifts-filter-form/ShiftsFilterForm\";\nimport { useTranslation } from \"react-i18next\";\nimport { CONSTANTS, SHIFTS_PAGE } from \"app/constants/TranslationNamespaces\";\nimport { useDispatch } from \"react-redux\";\nimport { closeDialog, openDialog } from \"@fuse/core/FuseDialog/fuseDialogSlice\";\nimport ShiftsDialogForm from \"./shifts-dialog-form/ShiftsDialogForm\";\nimport { BaseSyntheticEvent, useEffect, useState } from \"react\";\nimport { IShift, ITableShiftItem, ITableShiftsArg } from \"./ShiftsModel\";\nimport { DEFAULT_PAGE_SIZE } from \"app/constants/DefaultConfig\";\nimport { IGenericTable, SortOrder } from \"app/constants/DefaultInterfaces\";\nimport { useGetAllShiftsQuery } from \"./ShiftsApi\";\nimport { showLoading } from \"app/shared-components/custom-loading/CustomLoadingSlice\";\nimport { showMessage } from \"@fuse/core/FuseMessage/fuseMessageSlice\";\nimport { snackbarDefaults } from \"app/constants/SnackbarDefaults\";\nimport ShiftsDeleteDialogBox from \"./shifts-delete-dialog-box/ShiftsDeleteDialogBox\";\nimport ShiftsTableActions from \"./shifts-table-actions/ShiftsTableActions\";\nimport { SelectListShiftsShort } from \"app/constants/SelectListShifts\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\n\nconst Shifts = () => {\n\tconst constantTranslation = useTranslation(CONSTANTS);\n\tconst shiftsTranslation = useTranslation(SHIFTS_PAGE);\n\tconst dispatch = useDispatch();\n\tconst [fetchArgs, setFetchArgs] = useState<ITableShiftsArg>({ businessId: 1, page: 1, pageSize: DEFAULT_PAGE_SIZE, sortBy: \"phase\", sortOrder: SortOrder.ASCENDING });\n\tconst [tableInfo, setTableInfo] = useState<IGenericTable>({ currentPage: 1, pageSize: DEFAULT_PAGE_SIZE, totalCount: 0, totalPages: 0 });\n\tconst [curatedRows, setCuratedRows] = useState<Array<ITableShiftItem>>([]);\n\tconst getShifts = useGetAllShiftsQuery(fetchArgs, { refetchOnMountOrArgChange: true });\n\n\tconst defaultFilterValues = {\n\t\tbusinessPhaseId: undefined,\n\t\tname: \"\",\n\t\tdayShiftStartHour: 7,\n\t\tdayShiftEndHour: 19,\n\t\tnightShiftStartHour: 7,\n\t\tnightShiftEndHour: 19,\n\t\tslots: 0,\n\t\tminHeadCountDay: 0,\n\t\tshiftPatternType: 0\n\t};\n\n\tconst schema = z.object({\n\t\tbusinessPhaseId: z.any().optional(),\n\t\tname: z.string().optional(),\n\t\tdayShiftStartHour: z.number().optional(),\n\t\tdayShiftEndHour: z.number().optional(),\n\t\tnightShiftStartHour: z.number().optional(),\n\t\tnightShiftEndHour: z.number().optional(),\n\t\tslots: z.number().optional(),\n\t\tminHeadCountDay: z.number().optional(),\n\t\tshiftPatternType: z.number().optional()\n\t});\n\n\tconst methods = useForm({\n\t\tmode: \"onChange\",\n\t\tdefaultValues: defaultFilterValues,\n\t\tresolver: zodResolver(schema)\n\t});\n\n\tconst { handleSubmit, control, formState, setValue } = methods;\n\tconst { errors } = formState;\n\n\tconst handleEdit = (event: BaseSyntheticEvent) => {\n\t\tconst { id } = event.target;\n\n\t\tdispatch(\n\t\t\topenDialog({\n\t\t\t\tchildren: (\n\t\t\t\t\t<ShiftsDialogForm\n\t\t\t\t\t\tadd={false}\n\t\t\t\t\t\tshiftsId={id}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t})\n\t\t);\n\t};\n\n\tconst handleDelete = (event: BaseSyntheticEvent) => {\n\t\tconst { id } = event.target;\n\n\t\tdispatch(openDialog({ children: <ShiftsDeleteDialogBox shiftsId={id} /> }));\n\t};\n\n\tuseEffect(() => {\n\t\tconst { data: rawData, isLoading, isSuccess, isError, error, isFetching } = getShifts;\n\n\t\tdispatch(showLoading(isLoading));\n\t\tdispatch(showLoading(isFetching));\n\n\t\tif (isSuccess && rawData) {\n\t\t\tconst { totalCount, totalPages, currentPage, data, pageSize } = rawData;\n\t\t\tsetTableInfo((state) => ({ ...state, totalCount, totalPages, currentPage, pageSize }));\n\t\t\tdata.map((item) => {\n\t\t\t\tconst { id, businessPhaseName, name, slots, shiftPatternType, usersCount, dayShiftStartHour, dayShiftEndHour, nightShiftStartHour, nightShiftEndHour, minHeadCountDay, minHeadCountNight } = item;\n\t\t\t\tsetCuratedRows((state) => {\n\t\t\t\t\tconst newState = state;\n\t\t\t\t\tnewState.push({\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tactions: true,\n\t\t\t\t\t\tbusinessPhaseName,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tslots,\n\t\t\t\t\t\tday: `${SelectListShiftsShort[dayShiftStartHour].label} - ${SelectListShiftsShort[dayShiftEndHour].label}`,\n\t\t\t\t\t\tnight: `${SelectListShiftsShort[nightShiftStartHour].label} - ${SelectListShiftsShort[nightShiftEndHour].label}`,\n\t\t\t\t\t\tshiftPatternType,\n\t\t\t\t\t\tusersCount,\n\t\t\t\t\t\tminHeadCountDay,\n\t\t\t\t\t\tminHeadCountNight\n\t\t\t\t\t});\n\t\t\t\t\treturn newState;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (isError && error) {\n\t\t\tdispatch(showMessage(snackbarDefaults(`${constantTranslation.t(\"ERROR_LOADING_DATA\")} ${shiftsTranslation.t(\"SHIFTS\")}`, \"error\")));\n\t\t}\n\n\t\treturn () => setCuratedRows([]);\n\t}, [getShifts]);\n\n\tconst handlePageChange = (event: React.MouseEvent<HTMLButtonElement> | null, newPage: number) => {\n\t\tsetFetchArgs((state) => ({ ...state, page: newPage + 1 }));\n\t};\n\n\tconst handleSortChange = (event: React.MouseEvent<unknown>, property: keyof IShift) => {\n\t\tsetFetchArgs((state) => {\n\t\t\tlet sortOrder;\n\n\t\t\tif (state.sortBy === property) {\n\t\t\t\tif (state.sortOrder === SortOrder.ASCENDING) {\n\t\t\t\t\tsortOrder = SortOrder.DESCENDING;\n\t\t\t\t} else {\n\t\t\t\t\tsortOrder = SortOrder.ASCENDING;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsortOrder = SortOrder.ASCENDING;\n\t\t\t}\n\n\t\t\treturn { ...state, sortBy: property, sortOrder };\n\t\t});\n\t};\n\n\treturn (\n\t\t<CustomTableContainer\n\t\t\ttitle={shiftsTranslation.t(\"SHIFTS\")}\n\t\t\thasFilterButton={true}\n\t\t\thasAddButton={true}\n\t\t\thandleClick={() =>\n\t\t\t\tdispatch(\n\t\t\t\t\topenDialog({\n\t\t\t\t\t\tchildren: <ShiftsDialogForm add={true} />\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t}\n\t\t\thandleFilterClick={() =>\n\t\t\t\tdispatch(\n\t\t\t\t\topenDialog({\n\t\t\t\t\t\tchildren: (\n\t\t\t\t\t\t\t<ShiftsFilterForm\n\t\t\t\t\t\t\t\tisDialog={true}\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\thandleSubmit={handleSubmit((data) => {\n\t\t\t\t\t\t\t\t\tsetFetchArgs((state) => ({\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tbusinessPhaseId: data?.businessPhaseId?.value,\n\t\t\t\t\t\t\t\t\t\tname: data?.name,\n\t\t\t\t\t\t\t\t\t\tdayShiftStartHour: data?.dayShiftStartHour,\n\t\t\t\t\t\t\t\t\t\tdayShiftEndHour: data?.dayShiftEndHour,\n\t\t\t\t\t\t\t\t\t\tnightShiftStartHour: data?.nightShiftStartHour,\n\t\t\t\t\t\t\t\t\t\tnightShiftEndHour: data?.nightShiftEndHour,\n\t\t\t\t\t\t\t\t\t\tslots: data?.slots,\n\t\t\t\t\t\t\t\t\t\tminHeadCountDay: data?.minHeadCountDay,\n\t\t\t\t\t\t\t\t\t\tshiftPatternType: data?.shiftPatternType\n\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t\t\tdispatch(closeDialog());\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tsetValue={setValue}\n\t\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t}\n\t\t>\n\t\t\t<ShiftsFilterForm\n\t\t\t\tcontrol={control}\n\t\t\t\thandleSubmit={handleSubmit((data) => {\n\t\t\t\t\tsetFetchArgs((state) => ({\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\tbusinessPhaseId: data?.businessPhaseId?.value,\n\t\t\t\t\t\tname: data?.name,\n\t\t\t\t\t\tdayShiftStartHour: data?.dayShiftStartHour,\n\t\t\t\t\t\tdayShiftEndHour: data?.dayShiftEndHour,\n\t\t\t\t\t\tnightShiftStartHour: data?.nightShiftStartHour,\n\t\t\t\t\t\tnightShiftEndHour: data?.nightShiftEndHour,\n\t\t\t\t\t\tslots: data?.slots,\n\t\t\t\t\t\tminHeadCountDay: data?.minHeadCountDay,\n\t\t\t\t\t\tshiftPatternType: data?.shiftPatternType\n\t\t\t\t\t}));\n\t\t\t\t})}\n\t\t\t\tsetValue={setValue}\n\t\t\t\terrors={errors}\n\t\t\t/>\n\t\t\t<CustomTable\n\t\t\t\tsortBy={fetchArgs?.sortBy}\n\t\t\t\tsortOrder={fetchArgs?.sortOrder}\n\t\t\t\thasActions={true}\n\t\t\t\tshowId={false}\n\t\t\t\ttableLabel={shiftsTranslation.t(\"SHIFTS\")}\n\t\t\t\ttableHeadings={shiftsHeadings()}\n\t\t\t\tt={shiftsTranslation.t}\n\t\t\t\ttableInfo={tableInfo}\n\t\t\t\ttableRows={curatedRows}\n\t\t\t\thandlePageChange={handlePageChange}\n\t\t\t\thandleSortChange={handleSortChange}\n\t\t\t\thasFilterButton={true}\n\t\t\t\tmanyFilters={true}\n\t\t\t\ttableActions={ShiftsTableActions(handleEdit, handleDelete)}\n\t\t\t/>\n\t\t</CustomTableContainer>\n\t);\n};\n\nexport default Shifts;\n","import { apiService as api } from \"app/store/apiService\";\nimport { IShiftPattern, IShiftPatternArg, IShiftPatternEssentials, IShiftType } from \"./ShiftPatternModel\";\n\nexport const addTagTypes = [\"shiftPatterns/fetchAll\", \"shiftTypes/fetchAll\"] as const;\n\nconst ShiftPatternApi = api.enhanceEndpoints({ addTagTypes }).injectEndpoints({\n\tendpoints: (build) => ({\n\t\tgetAllShiftTypes: build.query<GetShiftTypesApiResponse, void>({\n\t\t\tquery: () => ({\n\t\t\t\turl: \"/shifts/getshifttypes\"\n\t\t\t}),\n\t\t\tprovidesTags: [\"shiftTypes/fetchAll\"]\n\t\t}),\n\t\tgetAllShiftPatterns: build.query<GetShiftPatternsApiResponse, GetShiftPatternsApiArg>({\n\t\t\tquery: ({ businessId, year, month }) => {\n\t\t\t\tif (month) {\n\t\t\t\t\treturn { url: `/shifts/getshiftpatternmonthwise?month=${month}&year=${year}&businessId=${businessId}` };\n\t\t\t\t} else {\n\t\t\t\t\treturn { url: `/shifts/getshiftpatternyearwise?year=${year}&businessId=${businessId}` };\n\t\t\t\t}\n\t\t\t},\n\t\t\tprovidesTags: [\"shiftPatterns/fetchAll\"]\n\t\t}),\n\t\tpostShiftPattern: build.mutation<PostShiftPatternApiResponse, PostShiftPatternApiArg>({\n\t\t\tquery: (queryArg) => ({\n\t\t\t\turl: `/shifts/addshiftpattern`,\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: queryArg\n\t\t\t}),\n\t\t\tinvalidatesTags: [\"shiftPatterns/fetchAll\"]\n\t\t}),\n\t\tdeleteShiftPattern: build.mutation<void, DeleteShiftPatternApiArg>({\n\t\t\tquery: (shiftPatternId) => ({\n\t\t\t\turl: `/shifts/deleteshiftpatterns/${shiftPatternId}`,\n\t\t\t\tmethod: \"DELETE\"\n\t\t\t}),\n\t\t\tinvalidatesTags: [\"shiftPatterns/fetchAll\"]\n\t\t})\n\t})\n});\n\nexport default ShiftPatternApi;\n\nexport type GetShiftTypesApiResponse = Array<IShiftType>;\nexport type GetShiftPatternsApiResponse = Array<IShiftPattern>;\nexport type GetShiftPatternsApiArg = IShiftPatternArg;\nexport type PostShiftPatternApiResponse = boolean;\nexport type PostShiftPatternApiArg = IShiftPatternEssentials;\nexport type DeleteShiftPatternApiArg = string;\n\nexport const { useGetAllShiftTypesQuery, useGetAllShiftPatternsQuery, usePostShiftPatternMutation, useDeleteShiftPatternMutation } = ShiftPatternApi;\n\nexport type ShiftPatternApiType = { [ShiftPatternApi.reducerPath]: ReturnType<typeof ShiftPatternApi.reducer> };\n","import { CARDINAL_500, CARDINAL_800, MATISSE_500, MATISSE_900 } from \"app/constants/DefaultColors\";\n\nexport const shiftPatternColors = [CARDINAL_500, CARDINAL_800, MATISSE_500, MATISSE_900];\n","import CustomDialog from \"app/shared-components/custom-dialog/CustomDialog\";\nimport { useTranslation } from \"react-i18next\";\nimport { CONSTANTS, SHIFTS_PAGE } from \"app/constants/TranslationNamespaces\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { showLoading } from \"app/shared-components/custom-loading/CustomLoadingSlice\";\nimport { showMessage } from \"@fuse/core/FuseMessage/fuseMessageSlice\";\nimport { closeDialog } from \"@fuse/core/FuseDialog/fuseDialogSlice\";\nimport { snackbarDefaults } from \"app/constants/SnackbarDefaults\";\nimport { useDeleteShiftPatternMutation } from \"../ShiftPatternApi\";\n\ntype ShiftPatternDeleteDialogBoxProps = {\n\tshiftPatternId?: string;\n\tdate?: string;\n};\n\nconst ShiftPatternDeleteDialogBox = (props: ShiftPatternDeleteDialogBoxProps) => {\n\tconst constantTranslation = useTranslation(CONSTANTS);\n\tconst shiftsTranslation = useTranslation(SHIFTS_PAGE);\n\tconst { shiftPatternId, date } = props;\n\tconst dispatch = useDispatch();\n\tconst [deleteShiftPattern, deleteShiftPatternResult] = useDeleteShiftPatternMutation();\n\n\tuseEffect(() => {\n\t\tconst { isSuccess, isError, error, isLoading } = deleteShiftPatternResult;\n\n\t\tdispatch(showLoading(isLoading));\n\n\t\tif (isSuccess) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tdispatch(showMessage(snackbarDefaults(`${shiftsTranslation.t(\"SHIFT_PATTERN\")} ${constantTranslation.t(\"DELETE_SUCCESSFUL\")}`, \"success\")));\n\t\t\t}, 250);\n\t\t\tdispatch(closeDialog());\n\t\t}\n\n\t\tif (error && isError) {\n\t\t\tdispatch(showMessage(snackbarDefaults(`${constantTranslation.t(\"DELETE_ERROR\")} ${shiftsTranslation.t(\"SHIFT_PATTERN\")}`, \"error\")));\n\t\t}\n\t}, [deleteShiftPatternResult]);\n\n\treturn (\n\t\t<CustomDialog\n\t\t\ttitle={`${constantTranslation.t(\"DELETE\")} ${shiftsTranslation.t(\"SHIFT_PATTERN\")}`}\n\t\t\tactions={[\n\t\t\t\t{\n\t\t\t\t\ttitle: constantTranslation.t(\"DELETE\"),\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tdeleteShiftPattern(shiftPatternId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]}\n\t\t>\n\t\t\t<div className=\"flex flex-col px-12\">\n\t\t\t\t<p className=\"mb-10\">\n\t\t\t\t\t{constantTranslation.t(\"DELETE_MSG_1\")} {shiftsTranslation.t(\"SHIFT_PATTERN\")} {date}?\n\t\t\t\t</p>\n\t\t\t\t<p className=\"mb-32\">\n\t\t\t\t\t{constantTranslation.t(\"DELETE_PREFIX\")} {shiftsTranslation.t(\"SHIFT_PATTERN\")} {constantTranslation.t(\"DELETE_MSG_2\")}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</CustomDialog>\n\t);\n};\n\nexport default ShiftPatternDeleteDialogBox;\n","import FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { DateSelectArg, DatesSetArg, EventContentArg, EventClickArg } from \"@fullcalendar/core\";\nimport { useDispatch } from \"react-redux\";\nimport { Box, FormControl, FormControlLabel, IconButton, Radio, RadioGroup, Tooltip, Typography } from \"@mui/material\";\nimport { motion } from \"framer-motion\";\nimport FuseSvgIcon from \"@fuse/core/FuseSvgIcon\";\nimport { FullCalendarEvent, IShiftPatternArg, IShiftType } from \"./ShiftPatternModel\";\nimport { useGetAllShiftPatternsQuery, useGetAllShiftTypesQuery, usePostShiftPatternMutation } from \"./ShiftPatternApi\";\nimport { showLoading } from \"app/shared-components/custom-loading/CustomLoadingSlice\";\nimport { useTranslation } from \"react-i18next\";\nimport { CONSTANTS, SHIFTS_PAGE } from \"app/constants/TranslationNamespaces\";\nimport { showMessage } from \"@fuse/core/FuseMessage/fuseMessageSlice\";\nimport { snackbarDefaults } from \"app/constants/SnackbarDefaults\";\nimport { shiftPatternColors } from \"./constants/shiftPatternColors\";\nimport moment from \"moment\";\nimport clsx from \"clsx\";\nimport { openDialog } from \"@fuse/core/FuseDialog/fuseDialogSlice\";\nimport ShiftPatternDeleteDialogBox from \"./shift-pattern-delete-dialog-box/ShiftPatternDeleteDialogBox\";\n\nconst ShiftPattern = () => {\n\tconst constantTranslation = useTranslation(CONSTANTS);\n\tconst shiftsTranslation = useTranslation(SHIFTS_PAGE);\n\tconst dispatch = useDispatch();\n\tconst [currentDate, setCurrentDate] = useState<DatesSetArg>();\n\tconst calendarRef = useRef<FullCalendar>(null);\n\tconst calendarApi = () => calendarRef.current.getApi();\n\tconst [fetchArgs, setFetchArgs] = useState<IShiftPatternArg>({ businessId: 1, year: new Date().getFullYear() });\n\tconst getShiftPatterns = useGetAllShiftPatternsQuery(fetchArgs, { refetchOnMountOrArgChange: true });\n\tconst [curatedEvents, setCuratedEvents] = useState<Array<FullCalendarEvent>>([]);\n\tconst getShiftTypes = useGetAllShiftTypesQuery();\n\tconst [shiftTypes, setShiftTypes] = useState<Array<IShiftType>>([]);\n\tconst [shiftTypeValue, setShiftTypeValue] = useState(0);\n\tconst [postShiftPattern, postShiftPatternResult] = usePostShiftPatternMutation();\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [selectedDate, setSelectedDate] = useState(\"\");\n\n\tconst handleShiftTypeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetShiftTypeValue(parseInt((event.target as HTMLInputElement).value));\n\t};\n\n\tconst handleDates = (rangeInfo: DatesSetArg) => {\n\t\tsetCurrentDate(rangeInfo);\n\n\t\tconst selectedYear = rangeInfo.start.getFullYear();\n\n\t\tif (selectedYear !== new Date().getFullYear()) {\n\t\t\tsetFetchArgs((state) => ({ ...state, year: selectedYear }));\n\t\t}\n\t};\n\n\tconst handleDateSelect = (selectInfo: DateSelectArg) => {\n\t\tif (!isLoading) {\n\t\t\tsetSelectedDate(moment(selectInfo.start).format(\"yyyy-MM-DD\"));\n\t\t\tconst exists = curatedEvents.filter(({ start }) => moment(selectInfo.start).toISOString() === start)[0];\n\t\t\tif (!exists) {\n\t\t\t\tpostShiftPattern({ day: moment(selectInfo.start).format(\"yyyy-MM-DD\"), businessId: 1, shiftTypeId: shiftTypeValue });\n\t\t\t} else {\n\t\t\t\tdispatch(\n\t\t\t\t\topenDialog({\n\t\t\t\t\t\tchildren: (\n\t\t\t\t\t\t\t<ShiftPatternDeleteDialogBox\n\t\t\t\t\t\t\t\tshiftPatternId={exists.id}\n\t\t\t\t\t\t\t\tdate={moment(exists.start).format(\"yyyy-MM-DD\")}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleEventClick = (clickInfo: EventClickArg) => {\n\t\tclickInfo.jsEvent.preventDefault();\n\t\tconst shiftPatternId = clickInfo.event.extendedProps.shiftPatternId;\n\t\tdispatch(\n\t\t\topenDialog({\n\t\t\t\tchildren: (\n\t\t\t\t\t<ShiftPatternDeleteDialogBox\n\t\t\t\t\t\tshiftPatternId={shiftPatternId}\n\t\t\t\t\t\tdate={moment(clickInfo.event.start).format(\"yyyy-MM-DD\")}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t})\n\t\t);\n\t};\n\n\tconst handleSelectAllow = (selectedEvent) => {\n\t\tlet startDate = selectedEvent.start;\n\t\tlet endDate = selectedEvent.end;\n\t\tendDate.setSeconds(endDate.getSeconds() - 1);\n\t\tif (startDate.getDate() === endDate.getDate()) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tconst { data: rawData, isLoading, isSuccess, isError, error, isFetching } = getShiftPatterns;\n\n\t\tsetIsLoading(isLoading);\n\t\tdispatch(showLoading(isLoading));\n\t\tdispatch(showLoading(isFetching));\n\n\t\tif (isSuccess && rawData) {\n\t\t\trawData.map((val) => {\n\t\t\t\tsetCuratedEvents((state) => [\n\t\t\t\t\t...state,\n\t\t\t\t\t{\n\t\t\t\t\t\tid: val.id.toString(),\n\t\t\t\t\t\ttitle: \"\",\n\t\t\t\t\t\tallDay: true,\n\t\t\t\t\t\tstart: moment(val.day, \"yyyy-MM-DD\").toISOString(),\n\t\t\t\t\t\tend: moment(val.day, \"yyyy-MM-DD\").add(\"days\", 1).toISOString(),\n\t\t\t\t\t\textendedProps: { label: shiftTypes[val.shiftTypeId - 1], color: shiftPatternColors[val.shiftTypeId - 1], shiftPatternId: val.id.toString() }\n\t\t\t\t\t}\n\t\t\t\t]);\n\t\t\t});\n\t\t}\n\n\t\tif (isError && error) {\n\t\t\tdispatch(showMessage(snackbarDefaults(`${constantTranslation.t(\"ERROR_LOADING_DATA\")} ${shiftsTranslation.t(\"SHIFT_PATTERNS\")}`, \"error\")));\n\t\t}\n\n\t\treturn () => setCuratedEvents([]);\n\t}, [getShiftPatterns]);\n\n\tuseEffect(() => {\n\t\tconst { data: rawData, isLoading, isSuccess, isError, error } = getShiftTypes;\n\n\t\tdispatch(showLoading(isLoading));\n\n\t\tif (isSuccess && rawData) {\n\t\t\trawData.map((data, index) => {\n\t\t\t\tconst { id, name } = data;\n\t\t\t\tsetShiftTypes((state) => [...state, { id, name, color: shiftPatternColors[index] }]);\n\t\t\t});\n\t\t}\n\n\t\tif (isError && error) {\n\t\t\tdispatch(showMessage(snackbarDefaults(`${constantTranslation.t(\"ERROR_LOADING_DATA\")} ${shiftsTranslation.t(\"SHIFT_PATTERN_TYPES\")}`, \"error\")));\n\t\t}\n\n\t\treturn () => setShiftTypes([]);\n\t}, [getShiftTypes]);\n\n\tuseEffect(() => {\n\t\tconst { isSuccess, isError, isLoading } = postShiftPatternResult;\n\n\t\tsetIsLoading(isLoading);\n\n\t\tif (isSuccess) {\n\t\t\tdispatch(showMessage(snackbarDefaults(`${shiftsTranslation.t(\"SHIFT_PATTERN_TYPE\")}: ${shiftTypes[shiftTypeValue - 1].name}\\nDate: ${selectedDate}\\n${constantTranslation.t(\"ADD_SUCCESSFUL\")}`, \"success\")));\n\t\t}\n\n\t\tif (isError) {\n\t\t\tdispatch(showMessage(snackbarDefaults(`${constantTranslation.t(\"ADD_ERROR\")} ${shiftsTranslation.t(\"SHIFT_PATTERN\")}`, \"error\")));\n\t\t}\n\t}, [postShiftPatternResult]);\n\n\tuseEffect(() => {\n\t\tif (shiftTypes.length > 0) {\n\t\t\tsetShiftTypeValue(shiftTypes[0].id);\n\t\t}\n\t}, [shiftTypes]);\n\n\treturn (\n\t\t<div className=\"flex flex-col w-full\">\n\t\t\t<div className=\"flex flex-col md:flex-row w-full\">\n\t\t\t\t<div className=\"flex flex-row p-12 items-center\">\n\t\t\t\t\t<Typography className=\"text-2xl font-semibold tracking-tight whitespace-nowrap mx-16\">{currentDate?.view.title}</Typography>\n\t\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t\t<Tooltip title=\"Previous\">\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\taria-label=\"Previous\"\n\t\t\t\t\t\t\t\tonClick={() => calendarApi().prev()}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FuseSvgIcon size={20}>heroicons-solid:chevron-left</FuseSvgIcon>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t<Tooltip title=\"Next\">\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\taria-label=\"Previous\"\n\t\t\t\t\t\t\t\tonClick={() => calendarApi().next()}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FuseSvgIcon size={20}>heroicons-solid:chevron-right</FuseSvgIcon>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t<Tooltip title=\"Today\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\t\t\tinitial={{ scale: 0 }}\n\t\t\t\t\t\t\t\t\tanimate={{ scale: 1, transition: { delay: 0.3 } }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\taria-label=\"today\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => calendarApi().today()}\n\t\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<FuseSvgIcon>heroicons-outline:calendar</FuseSvgIcon>\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex flex-col md:flex-row md:items-center px-24 pb-24 md:p-12 md:px-0\">\n\t\t\t\t\t<span className=\"mr-48\">Day / Night: </span>\n\t\t\t\t\t<FormControl>\n\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\taria-labelledby={`${shiftsTranslation.t(\"SHIFT_PATTERN_TYPES\")}`}\n\t\t\t\t\t\t\tname=\"shiftTypeValue\"\n\t\t\t\t\t\t\tvalue={shiftTypeValue}\n\t\t\t\t\t\t\tonChange={handleShiftTypeChange}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{shiftTypes.map((type) => (\n\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\tkey={type.id}\n\t\t\t\t\t\t\t\t\tvalue={type.id}\n\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t<span className=\"mr-12 flex flex-row items-center\">\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"w-12 h-12 rounded-full mr-8\"\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: type.color }}\n\t\t\t\t\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t\t\t\t\t{type.name}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<FullCalendar\n\t\t\t\tplugins={[dayGridPlugin, interactionPlugin]}\n\t\t\t\theaderToolbar={false}\n\t\t\t\tinitialView=\"dayGridMonth\"\n\t\t\t\teditable\n\t\t\t\tselectable={true}\n\t\t\t\tdragScroll={true}\n\t\t\t\tref={calendarRef}\n\t\t\t\tinitialDate={new Date()}\n\t\t\t\tdatesSet={handleDates}\n\t\t\t\tselectLongPressDelay={100}\n\t\t\t\teventLongPressDelay={100000}\n\t\t\t\tselectAllow={handleSelectAllow}\n\t\t\t\tselect={handleDateSelect}\n\t\t\t\tevents={curatedEvents}\n\t\t\t\teventContent={(eventInfo: EventContentArg & { event: Event }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tsx={{ backgroundColor: eventInfo.event.extendedProps.color }}\n\t\t\t\t\t\t\tclassName={clsx(\"flex items-center w-full rounded-4 py-12\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t\teventClick={handleEventClick}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default ShiftPattern;\n","import CustomTabs from \"app/shared-components/custom-tabs/CustomTabs\";\nimport shiftsTabItems from \"./constants/shiftsTabItems\";\nimport { LazyLoadedSlices } from \"app/store/lazyLoadedSlices\";\nimport { useSelector } from \"react-redux\";\nimport { ShiftsState } from \"./shiftsSlice\";\nimport { Box } from \"@mui/material\";\nimport { SHIFTS_PAGE } from \"app/constants/TranslationNamespaces\";\nimport { useTranslation } from \"react-i18next\";\nimport CustomTabPanel from \"app/shared-components/custom-tab-panel/CustomTabPanel\";\nimport Shifts from \"./tabs/shifts/Shifts\";\nimport ShiftPattern from \"./tabs/shift-pattern/ShiftPattern\";\n\ntype ShiftsContentProps = {};\n\nconst ShiftsContent = (props: ShiftsContentProps) => {\n\tconst { selectedTab } = useSelector<LazyLoadedSlices, ShiftsState>((state) => state.shifts);\n\tconst { t } = useTranslation(SHIFTS_PAGE);\n\n\treturn (\n\t\t<Box sx={{ width: \"100%\" }}>\n\t\t\t<CustomTabs\n\t\t\t\ttabValue={selectedTab}\n\t\t\t\ttabLabel=\"shifts\"\n\t\t\t\ttabs={shiftsTabItems()}\n\t\t\t\tt={t}\n\t\t\t/>\n\t\t\t<CustomTabPanel\n\t\t\t\tvalue={selectedTab}\n\t\t\t\tindex={0}\n\t\t\t\taria=\"Shifts\"\n\t\t\t>\n\t\t\t\t<Shifts />\n\t\t\t</CustomTabPanel>\n\t\t\t<CustomTabPanel\n\t\t\t\tvalue={selectedTab}\n\t\t\t\tindex={1}\n\t\t\t\taria=\"ShiftPattern\"\n\t\t\t>\n\t\t\t\t<ShiftPattern />\n\t\t\t</CustomTabPanel>\n\t\t</Box>\n\t);\n};\n\nexport default ShiftsContent;\n","import PageHeader from \"app/shared-components/page-header/PageHeader\";\nimport DefaultRootStyle from \"app/constants/DefaultRootStyle\";\nimport FusePageCarded from \"@fuse/core/FusePageCarded\";\nimport { useTranslation } from \"react-i18next\";\nimport { styled } from \"@mui/material/styles\";\nimport { SHIFTS_PAGE } from \"app/constants/TranslationNamespaces\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { setTab } from \"./shiftsSlice\";\nimport ShiftsContent from \"./ShiftsContent\";\nimport { BG_SLATE_100, BG_SLATE_200 } from \"app/constants/DefaultColors\";\n\nconst Root = styled(FusePageCarded)(({ theme }) => ({\n\t...DefaultRootStyle(theme),\n\t\"&  .fc-media-screen\": {\n\t\tminHeight: \"60vh\",\n\t\tmaxHeight: \"70vh\",\n\t\twidth: \"100%\"\n\t},\n\t\"& .fc-scrollgrid, & .fc-theme-standard td, & .fc-theme-standard th\": {\n\t\tborderColor: `${theme.palette.divider}!important`,\n\t\tbackgroundColor: BG_SLATE_100\n\t},\n\t\"&  .fc-scrollgrid-section > td\": {\n\t\tborder: 0\n\t},\n\t\"& .fc-daygrid-day\": {\n\t\t\"&:last-child\": {\n\t\t\tborderRight: 0\n\t\t}\n\t},\n\t\"& .fc-col-header-cell\": {\n\t\tborderWidth: \"0 1px 0 1px\",\n\t\tpadding: \"8px 0 0 0\",\n\t\t\"& .fc-col-header-cell-cushion\": {\n\t\t\tcolor: theme.palette.text.secondary,\n\t\t\tfontWeight: 500,\n\t\t\tfontSize: 12,\n\t\t\ttextTransform: \"uppercase\"\n\t\t}\n\t},\n\t\"& .fc-view \": {\n\t\t\"& > .fc-scrollgrid\": {\n\t\t\tborder: 0\n\t\t}\n\t},\n\t\"& .fc-daygrid-day.fc-day-today\": {\n\t\tbackgroundColor: \"transparent!important\",\n\t\t\"& .fc-daygrid-day-number\": {\n\t\t\tborderRadius: \"100%\",\n\t\t\tbackgroundColor: `${theme.palette.secondary.main}!important`,\n\t\t\tcolor: `${theme.palette.secondary.contrastText}!important`\n\t\t}\n\t},\n\t\"& .fc-daygrid-day-top\": {\n\t\tjustifyContent: \"center\",\n\t\t\"& .fc-daygrid-day-number\": {\n\t\t\tcolor: theme.palette.text.secondary,\n\t\t\tfontWeight: 500,\n\t\t\tfontSize: 12,\n\t\t\tdisplay: \"inline-flex\",\n\t\t\talignItems: \"center\",\n\t\t\tjustifyContent: \"center\",\n\t\t\twidth: 26,\n\t\t\theight: 26,\n\t\t\tmargin: \"4px 0\",\n\t\t\tborderRadius: \"50%\",\n\t\t\tfloat: \"none\",\n\t\t\tlineHeight: 1\n\t\t}\n\t},\n\t\"& .fc-h-event\": {\n\t\tbackground: \"initial\"\n\t},\n\t\"& .fc-event\": {\n\t\tborder: 0,\n\t\tpadding: \"0 \",\n\t\tfontSize: 12,\n\t\tmargin: \"0 6px 4px 6px!important\"\n\t},\n\t\"& .fc-highlight\": {\n\t\tbackground: BG_SLATE_200\n\t}\n}));\n\ntype ShiftsProps = {\n\ttab?: number;\n};\n\nconst Shifts = (props: ShiftsProps) => {\n\tconst { tab } = props;\n\tconst { t } = useTranslation(SHIFTS_PAGE);\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tconst setSettingsTab = (tab: number) => {\n\t\t\tdispatch(setTab({ tab }));\n\t\t};\n\n\t\tif (tab >= 0) {\n\t\t\tsetSettingsTab(tab);\n\t\t}\n\n\t\treturn () => {\n\t\t\tsetSettingsTab(0);\n\t\t};\n\t}, [tab]);\n\n\treturn (\n\t\t<Root\n\t\t\theader={<PageHeader title={t(\"TITLE\")} />}\n\t\t\tscroll=\"page\"\n\t\t\tcontent={<ShiftsContent />}\n\t\t/>\n\t);\n};\n\nexport default Shifts;\n"],"names":["shiftsTabItems","shiftsHeadings","ShiftsDialogForm","props","add","shiftsId","shiftsTranslation","useTranslation","SHIFTS_PAGE","constantTranslation","CONSTANTS","settingsTranslation","SETTINGS_PAGE","dispatch","useDispatch","phaseFetchArg","setPhaseFetchArg","useState","DEFAULT_PAGE_SIZE","SortOrder","skip","setSkip","phases","setPhases","totalPhases","setTotalPhases","getBusinessInfo","useGetBusinessInfoQuery","getBusinessPhases","useGetAllBusinessPhasesQuery","getShiftById","useGetOneShiftQuery","selectedPhase","setSelectedPhase","postShift","postShiftResult","usePostShiftMutation","putShift","putShiftResult","usePutShiftMutation","useEffect","defaultValues","schema","z","EMPTY_ERROR_MESSAGE","methods","useForm","zodResolver","handleSubmit","control","formState","setValue","reset","setError","clearErrors","watch","isValid","errors","isDirty","isSuccess","rawData","isLoading","isFetching","isError","error","showLoading","data","totalCount","item","phase","state","showMessage","snackbarDefaults","key","submitForm","closeDialog","infinitePhaseScroll","phaseInputChange","value","jsxs","CustomFormDialog","jsx","CustomAutoComplete","CustomTextField","CustomSelectField","SelectListShifts","FormHelperText","ShiftsFilterForm","isDialog","formFields","flags","Fragment","CustomDialog","CustomFilterContainer","openDialog","ShiftsDeleteDialogBox","deleteShift","deleteShiftResult","useDeleteShiftMutation","ShiftsTableActions","handleEdit","handleDelete","FuseSvgIcon","Shifts","fetchArgs","setFetchArgs","tableInfo","setTableInfo","curatedRows","setCuratedRows","getShifts","useGetAllShiftsQuery","defaultFilterValues","event","id","totalPages","currentPage","pageSize","businessPhaseName","name","slots","shiftPatternType","usersCount","dayShiftStartHour","dayShiftEndHour","nightShiftStartHour","nightShiftEndHour","minHeadCountDay","minHeadCountNight","newState","SelectListShiftsShort","handlePageChange","newPage","handleSortChange","property","sortOrder","CustomTableContainer","_a","CustomTable","addTagTypes","ShiftPatternApi","api","build","businessId","year","month","queryArg","shiftPatternId","useGetAllShiftTypesQuery","useGetAllShiftPatternsQuery","usePostShiftPatternMutation","useDeleteShiftPatternMutation","shiftPatternColors","CARDINAL_500","CARDINAL_800","MATISSE_500","MATISSE_900","ShiftPatternDeleteDialogBox","date","deleteShiftPattern","deleteShiftPatternResult","ShiftPattern","currentDate","setCurrentDate","calendarRef","useRef","calendarApi","getShiftPatterns","curatedEvents","setCuratedEvents","getShiftTypes","shiftTypes","setShiftTypes","shiftTypeValue","setShiftTypeValue","postShiftPattern","postShiftPatternResult","setIsLoading","selectedDate","setSelectedDate","handleShiftTypeChange","handleDates","rangeInfo","selectedYear","handleDateSelect","selectInfo","moment","exists","start","handleEventClick","clickInfo","handleSelectAllow","selectedEvent","startDate","endDate","val","index","Typography","Tooltip","IconButton","motion","FormControl","RadioGroup","type","FormControlLabel","Radio","FullCalendar","dayGridPlugin","interactionPlugin","eventInfo","Box","clsx","ShiftsContent","selectedTab","useSelector","t","CustomTabs","CustomTabPanel","Root","styled","FusePageCarded","theme","DefaultRootStyle","BG_SLATE_100","BG_SLATE_200","tab","setSettingsTab","setTab","PageHeader"],"mappings":"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"}